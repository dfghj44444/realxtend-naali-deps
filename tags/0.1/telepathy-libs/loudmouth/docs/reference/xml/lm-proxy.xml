<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="loudmouth-lm-proxy">
<refmeta>
<refentrytitle role="top_of_page" id="loudmouth-lm-proxy.top_of_page">LmProxy</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LOUDMOUTH Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>LmProxy</refname>
<refpurpose>API for the proxy support in Loudmouth</refpurpose>
</refnamediv>

<refsynopsisdiv id="loudmouth-lm-proxy.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
                    <link linkend="LmProxy">LmProxy</link>;
enum                <link linkend="LmProxyType">LmProxyType</link>;
<link linkend="LmProxy">LmProxy</link> *           <link linkend="lm-proxy-new">lm_proxy_new</link>                        (<link linkend="LmProxyType">LmProxyType</link> type);
<link linkend="LmProxy">LmProxy</link> *           <link linkend="lm-proxy-new-with-server">lm_proxy_new_with_server</link>            (<link linkend="LmProxyType">LmProxyType</link> type,
                                                         const <link linkend="gchar">gchar</link> *server,
                                                         <link linkend="guint">guint</link> port);
<link linkend="LmProxyType">LmProxyType</link>         <link linkend="lm-proxy-get-type">lm_proxy_get_type</link>                   (<link linkend="LmProxy">LmProxy</link> *proxy);
<link linkend="void">void</link>                <link linkend="lm-proxy-set-type">lm_proxy_set_type</link>                   (<link linkend="LmProxy">LmProxy</link> *proxy,
                                                         <link linkend="LmProxyType">LmProxyType</link> type);
const <link linkend="gchar">gchar</link> *       <link linkend="lm-proxy-get-server">lm_proxy_get_server</link>                 (<link linkend="LmProxy">LmProxy</link> *proxy);
<link linkend="void">void</link>                <link linkend="lm-proxy-set-server">lm_proxy_set_server</link>                 (<link linkend="LmProxy">LmProxy</link> *proxy,
                                                         const <link linkend="gchar">gchar</link> *server);
<link linkend="guint">guint</link>               <link linkend="lm-proxy-get-port">lm_proxy_get_port</link>                   (<link linkend="LmProxy">LmProxy</link> *proxy);
<link linkend="void">void</link>                <link linkend="lm-proxy-set-port">lm_proxy_set_port</link>                   (<link linkend="LmProxy">LmProxy</link> *proxy,
                                                         <link linkend="guint">guint</link> port);
const <link linkend="gchar">gchar</link> *       <link linkend="lm-proxy-get-username">lm_proxy_get_username</link>               (<link linkend="LmProxy">LmProxy</link> *proxy);
<link linkend="void">void</link>                <link linkend="lm-proxy-set-username">lm_proxy_set_username</link>               (<link linkend="LmProxy">LmProxy</link> *proxy,
                                                         const <link linkend="gchar">gchar</link> *username);
const <link linkend="gchar">gchar</link> *       <link linkend="lm-proxy-get-password">lm_proxy_get_password</link>               (<link linkend="LmProxy">LmProxy</link> *proxy);
<link linkend="void">void</link>                <link linkend="lm-proxy-set-password">lm_proxy_set_password</link>               (<link linkend="LmProxy">LmProxy</link> *proxy,
                                                         const <link linkend="gchar">gchar</link> *password);
<link linkend="LmProxy">LmProxy</link> *           <link linkend="lm-proxy-ref">lm_proxy_ref</link>                        (<link linkend="LmProxy">LmProxy</link> *proxy);
<link linkend="void">void</link>                <link linkend="lm-proxy-unref">lm_proxy_unref</link>                      (<link linkend="LmProxy">LmProxy</link> *proxy);
</synopsis>
</refsynopsisdiv>









<refsect1 id="loudmouth-lm-proxy.description" role="desc">
<title role="desc.title">Description</title>
<para>
Use this together with an <link linkend="LmConnection"><type>LmConnection</type></link> to get the connection to use connect through a proxy. Example of how to use the <link linkend="LmProxy"><type>LmProxy</type></link> API.
<informalexample><programlisting><![CDATA[
LmConnection *connection;
LmProxy      *proxy;
connection = lm_connection_new ("myserver");
proxy = lm_proxy_new_with_server (LM_PROXY_TYPE_HTTP,
				  "myproxyserver",
				  8080);
lm_connection_set_proxy (connection, proxy);
...]]></programlisting></informalexample>
</para>
</refsect1>

<refsect1 id="loudmouth-lm-proxy.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="LmProxy" role="struct">
<title>LmProxy</title>
<indexterm zone="LmProxy"><primary sortas="LmProxy">LmProxy</primary></indexterm><programlisting>typedef struct _LmProxy LmProxy;</programlisting>
<para>
This should not be accessed directly. Use the accessor functions as described below.
</para></refsect2>
<refsect2 id="LmProxyType" role="enum">
<title>enum LmProxyType</title>
<indexterm zone="LmProxyType"><primary sortas="LmProxyType">LmProxyType</primary></indexterm><programlisting>typedef enum {
	LM_PROXY_TYPE_NONE = 0,
	LM_PROXY_TYPE_HTTP
} LmProxyType;
</programlisting>
<para>
The type of the proxy.
</para><variablelist role="enum">
<varlistentry id="LM-PROXY-TYPE-NONE--CAPS" role="constant">
<term><literal>LM_PROXY_TYPE_NONE</literal></term>
<listitem><simpara>Unused
</simpara></listitem>
</varlistentry>
<varlistentry id="LM-PROXY-TYPE-HTTP--CAPS" role="constant">
<term><literal>LM_PROXY_TYPE_HTTP</literal></term>
<listitem><simpara>An HTTP proxy.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="lm-proxy-new" role="function">
<title>lm_proxy_new ()</title>
<indexterm zone="lm-proxy-new"><primary sortas="lm_proxy_new">lm_proxy_new</primary></indexterm><programlisting><link linkend="LmProxy">LmProxy</link> *           lm_proxy_new                        (<link linkend="LmProxyType">LmProxyType</link> type);</programlisting>
<para>
Creates a new Proxy. Used <link linkend="lm-connection-set-proxy"><type>lm_connection_set_proxy</type></link> to make a connection 
user this proxy.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara> the type of the new proxy
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a newly create proxy
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lm-proxy-new-with-server" role="function">
<title>lm_proxy_new_with_server ()</title>
<indexterm zone="lm-proxy-new-with-server"><primary sortas="lm_proxy_new_with_server">lm_proxy_new_with_server</primary></indexterm><programlisting><link linkend="LmProxy">LmProxy</link> *           lm_proxy_new_with_server            (<link linkend="LmProxyType">LmProxyType</link> type,
                                                         const <link linkend="gchar">gchar</link> *server,
                                                         <link linkend="guint">guint</link> port);</programlisting>
<para>
Creates a new Proxy. Use <link linkend="lm-connection-set-proxy"><type>lm_connection_set_proxy</type></link> to make a connection 
user this proxy.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara> the type of the new proxy
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&#160;:</term>
<listitem><simpara> the proxy server
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>port</parameter>&#160;:</term>
<listitem><simpara> the proxy server port
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a newly create proxy
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lm-proxy-get-type" role="function">
<title>lm_proxy_get_type ()</title>
<indexterm zone="lm-proxy-get-type"><primary sortas="lm_proxy_get_type">lm_proxy_get_type</primary></indexterm><programlisting><link linkend="LmProxyType">LmProxyType</link>         lm_proxy_get_type                   (<link linkend="LmProxy">LmProxy</link> *proxy);</programlisting>
<para>
Fetches the proxy type</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> an <link linkend="LmProxy"><type>LmProxy</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the type 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lm-proxy-set-type" role="function">
<title>lm_proxy_set_type ()</title>
<indexterm zone="lm-proxy-set-type"><primary sortas="lm_proxy_set_type">lm_proxy_set_type</primary></indexterm><programlisting><link linkend="void">void</link>                lm_proxy_set_type                   (<link linkend="LmProxy">LmProxy</link> *proxy,
                                                         <link linkend="LmProxyType">LmProxyType</link> type);</programlisting>
<para>
Sets the proxy type for <parameter>proxy</parameter> to <parameter>type</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> an <link linkend="LmProxy"><type>LmProxy</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara> an LmProxyType
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lm-proxy-get-server" role="function">
<title>lm_proxy_get_server ()</title>
<indexterm zone="lm-proxy-get-server"><primary sortas="lm_proxy_get_server">lm_proxy_get_server</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link> *       lm_proxy_get_server                 (<link linkend="LmProxy">LmProxy</link> *proxy);</programlisting>
<para>
Fetches the server address that <parameter>proxy</parameter> is using.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> an <link linkend="LmProxy"><type>LmProxy</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the proxy server address
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lm-proxy-set-server" role="function">
<title>lm_proxy_set_server ()</title>
<indexterm zone="lm-proxy-set-server"><primary sortas="lm_proxy_set_server">lm_proxy_set_server</primary></indexterm><programlisting><link linkend="void">void</link>                lm_proxy_set_server                 (<link linkend="LmProxy">LmProxy</link> *proxy,
                                                         const <link linkend="gchar">gchar</link> *server);</programlisting>
<para>
Sets the server address for <parameter>proxy</parameter> to <parameter>server</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> an <link linkend="LmProxy"><type>LmProxy</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&#160;:</term>
<listitem><simpara> Address of the proxy server
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lm-proxy-get-port" role="function">
<title>lm_proxy_get_port ()</title>
<indexterm zone="lm-proxy-get-port"><primary sortas="lm_proxy_get_port">lm_proxy_get_port</primary></indexterm><programlisting><link linkend="guint">guint</link>               lm_proxy_get_port                   (<link linkend="LmProxy">LmProxy</link> *proxy);</programlisting>
<para>
Fetches the port that <parameter>proxy</parameter> is using.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> an <link linkend="LmProxy"><type>LmProxy</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The port 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lm-proxy-set-port" role="function">
<title>lm_proxy_set_port ()</title>
<indexterm zone="lm-proxy-set-port"><primary sortas="lm_proxy_set_port">lm_proxy_set_port</primary></indexterm><programlisting><link linkend="void">void</link>                lm_proxy_set_port                   (<link linkend="LmProxy">LmProxy</link> *proxy,
                                                         <link linkend="guint">guint</link> port);</programlisting>
<para>
Sets the server port that <parameter>proxy</parameter> will be using.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> an <link linkend="LmProxy"><type>LmProxy</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>port</parameter>&#160;:</term>
<listitem><simpara> proxy server port
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lm-proxy-get-username" role="function">
<title>lm_proxy_get_username ()</title>
<indexterm zone="lm-proxy-get-username"><primary sortas="lm_proxy_get_username">lm_proxy_get_username</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link> *       lm_proxy_get_username               (<link linkend="LmProxy">LmProxy</link> *proxy);</programlisting>
<para>
Fetches the username that <parameter>proxy</parameter> is using.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> an <link linkend="LmProxy"><type>LmProxy</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the username
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lm-proxy-set-username" role="function">
<title>lm_proxy_set_username ()</title>
<indexterm zone="lm-proxy-set-username"><primary sortas="lm_proxy_set_username">lm_proxy_set_username</primary></indexterm><programlisting><link linkend="void">void</link>                lm_proxy_set_username               (<link linkend="LmProxy">LmProxy</link> *proxy,
                                                         const <link linkend="gchar">gchar</link> *username);</programlisting>
<para>
Sets the username for <parameter>proxy</parameter> to <parameter>username</parameter> or <link linkend="NULL--CAPS"><literal>NULL</literal></link> to unset.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> an <link linkend="LmProxy"><type>LmProxy</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>username</parameter>&#160;:</term>
<listitem><simpara> Username
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lm-proxy-get-password" role="function">
<title>lm_proxy_get_password ()</title>
<indexterm zone="lm-proxy-get-password"><primary sortas="lm_proxy_get_password">lm_proxy_get_password</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link> *       lm_proxy_get_password               (<link linkend="LmProxy">LmProxy</link> *proxy);</programlisting>
<para>
Fetches the password that <parameter>proxy</parameter> is using.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> an <link linkend="LmProxy"><type>LmProxy</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the proxy password
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lm-proxy-set-password" role="function">
<title>lm_proxy_set_password ()</title>
<indexterm zone="lm-proxy-set-password"><primary sortas="lm_proxy_set_password">lm_proxy_set_password</primary></indexterm><programlisting><link linkend="void">void</link>                lm_proxy_set_password               (<link linkend="LmProxy">LmProxy</link> *proxy,
                                                         const <link linkend="gchar">gchar</link> *password);</programlisting>
<para>
Sets the password for <parameter>proxy</parameter> to <parameter>password</parameter> or <link linkend="NULL--CAPS"><literal>NULL</literal></link> to unset.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> an <link linkend="LmProxy"><type>LmProxy</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>password</parameter>&#160;:</term>
<listitem><simpara> Password
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lm-proxy-ref" role="function">
<title>lm_proxy_ref ()</title>
<indexterm zone="lm-proxy-ref"><primary sortas="lm_proxy_ref">lm_proxy_ref</primary></indexterm><programlisting><link linkend="LmProxy">LmProxy</link> *           lm_proxy_ref                        (<link linkend="LmProxy">LmProxy</link> *proxy);</programlisting>
<para>
Adds a reference to <parameter>proxy</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> an <link linkend="LmProxy"><type>LmProxy</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the proxy
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lm-proxy-unref" role="function">
<title>lm_proxy_unref ()</title>
<indexterm zone="lm-proxy-unref"><primary sortas="lm_proxy_unref">lm_proxy_unref</primary></indexterm><programlisting><link linkend="void">void</link>                lm_proxy_unref                      (<link linkend="LmProxy">LmProxy</link> *proxy);</programlisting>
<para>
Removes a reference from <parameter>proxy</parameter>. When no more references are present
<parameter>proxy</parameter> is freed.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> an <link linkend="LmProxy"><type>LmProxy</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
